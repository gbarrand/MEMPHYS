#!/bin/sh -f

if [ $# != 1 ] ; then
  echo 'give an app main file.'
  exit
fi

app_src="$1"

suffix=`echo ${app_src} | sed 's:.*\.::'`
if [ "${suffix}" = "" ] ; then
  echo "no suffix found in ${app_src}."
  exit  
fi

dir=`dirname ${app_src}`
name=`basename ${app_src}`
name_no_suffix=`echo ${name} | sed -e "s:.${suffix}::g"`

app_pch_h="${dir}/${name_no_suffix}_pch.h"

grep '#include' ${app_src} > ${app_pch_h}

app_pch="${dir}/${name_no_suffix}.pch"

cppflags="${cppflags} -I../../"

clang++ -x c++-header ${cppflags} ${app_pch_h} -o ${app_pch}

app_file_exe="${name_no_suffix}"

#////////////////////////////////////////
#/// produce <app>_pch.cpp file : ///////
#////////////////////////////////////////
/bin/rm -f ${name_no_suffix}_pch.cpp
first_include=yes
old_IFS="${IFS}"
IFS='
'
while read item; do
  xxx="`echo ${item} | sed -e 's:#include::g'`"
  if [ "${xxx}" != "${item}" ] ; then
    # found :
    if [ ${first_include} = yes ] ; then
      echo "#include \"${name_no_suffix}_pch.h\"" >> ${name_no_suffix}_pch.cpp
      first_include=no
    #else
    #  echo ${item} >> ${name_no_suffix}_pch.cpp
    fi
  else
    echo ${item} >> ${name_no_suffix}_pch.cpp
  fi
done < ${app_src}

IFS="${old_IFS}"
#////////////////////////////////////////
#////////////////////////////////////////
#////////////////////////////////////////

bin_dir=bin_clang
mkdir -p ${bin_dir}
clang++ -include-pch ${app_pch} ${cppflags} ${name_no_suffix}_pch.cpp -o ${bin_dir}/${name_no_suffix}_pch

