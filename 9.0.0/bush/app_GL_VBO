
# to be sourced in <app>/mgr/build scripts.

if [ ${build_visual} = "yes" ] ; then
  echo "bush/app_trailer : NOTE : today -DEXLIB_HAS_GL_VBO not supported."

elif [ "${build_cocoa}" = "yes" -o "${build_cocoa_gnu}" = "yes" ] ; then
  cppflags="${cppflags} -DEXLIB_HAS_GL_VBO"

elif [ "${build_ios}" = "yes" -o "${build_ios_gnu}" = "yes" -o "${build_iossim}" = "yes" ] ; then
  cppflags="${cppflags} -DEXLIB_HAS_GL_VBO"

elif [ "${build_android}" = "yes" ] ; then
  cppflags="${cppflags} -DEXLIB_HAS_GL_VBO"

elif [ ${build_x11_no_gl} = "yes" ] ; then
  echo dummy > /dev/null

else
  if [ `uname` = Darwin ] ; then
    cppflags="${cppflags} -DEXLIB_HAS_GL_VBO"
    cppflags="${cppflags} -DEXLIB_HAS_GL_LIST"
  else
    cppflags="${cppflags} -DEXLIB_HAS_GL_LIST"
    if [ "${build_enforce_vbo}" = "yes" ] ; then
      cppflags="${cppflags} -DEXLIB_HAS_GL_VBO"
    else
      # NOTE : Linux to remote X11 : EXLIB_HAS_GL_VBO crashes
      echo "bush/app_trailer : NOTE : cpp macro EXLIB_HAS_GL_VBO not set."
    fi
  fi
fi

